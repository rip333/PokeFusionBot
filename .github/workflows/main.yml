

name: Build, Unit Test, and Deploy to Google Cloud e2 Ubuntu instance

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x', '6.0.x' ]
        
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - id: 'compute-ssh'
      uses: 'google-github-actions/ssh-compute@v0'
      with:
        instance_name: '${{ secrets.GCP_INSTANCE_NAME }}'
        zone: '${{ secrets.GCP_ZONE }}'
        ssh_private_key: '${{ secrets.SSH_PRIVATE_KEY }}'
        user: '${{ secrets.GCP_USER }}'
        command: |
          sudo systemctl stop pokefusebot.service
          cd /home/ripman3/telegram_bots/pokefusion/PokeFusionBot
          git pull
          dotnet build
          dotnet publish -c Release -r linux-x64 --self-contained true
          cd PokeFusionBot/bin/Release/net7.0/linux-x64/publish
          echo "${{ secrets.TELEGRAM_BOT_TOKEN }}" > token.txt
          sudo systemctl start pokefusebot.service

    - name: Access logs
      id: 'logs'
      run: |-
        echo '${{ steps.compute-ssh.outputs.stdout }}'
        echo '${{ steps.compute-ssh.outputs.stderr }}'